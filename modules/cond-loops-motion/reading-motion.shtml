<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <link rel="stylesheet" type="text/css" href="style.css">
    <title>CSC 161 Reading on Scribbler 2 Motion</title>  
    <link rev="made" href="mailto:walker@cs.grinnell.edu">
</head>
<body>
<!--#include file="header.inc"-->

<h1>Scribbler 2 Motion</h1>

<h2>The Robot</h2>
<p>
The Scribbler 2 robot has three wheels. The small wheel below the fluke
dongle is purely for balance. The two large wheels each have their own
motor, which can be adjusted to move at separate speeds to turn the robot
to the left or right. The speed of the motors ranges from -1 (backwards at
full speed) to 1 (forwards at full speed). It is important to note that
there is no built-in time limit for how long the motor can run, so if you
call a command to move without specifying a time limit or commanding the
robot to stop, the motors will keep running until the Scribbler 2 battery dies.
</p>

<p>
A second important feature of the Scribbler 2 robot is that it can have the
"front" set as either direction. When the robot has it's forwardness set as
"scribbler-forward", the front of the robot is the direction without a
wheel. When the forwardness is "fluke-forward", the front is the direction
with the small wheel (below the green card-like fluke dongle). The command
to change the forwardness of the robot is:
</p>

<pre>
   rSetForwardness(char * direction);
</pre> 

<p>

The options are "scribbler-forward" or "fluke-forward". By default, forwardness is set to "scribbler-forward" by rConnect. 
</p>

<h2>Robot Commands</h2>
<p>
 Scribbler robots responds to several motion commands that include moving forward, backward, or turning. These commands can be classified as blocking or non-blocking. It is important to note that most motion commands can fall into either category, depending on the given parameters.
</p>
<h3>Blocking and non-blocking commands</h3>
<p>
A <b>blocking</b> command means that while the robot is excecuting this command, the program will not proceed until the command is completed. That is, while the Scribbler 2 is performing these commands, it
cannot perform other actions (such as beeping). A <b>non-blocking</b> command is one that allows the robot to multi-task. For example, you could issue a non-blocking forward command and have the robot beep at the same time as it moves forward.  
</p>
<h3>Motion Commands with a Time Parameter</h3>
<p>
The following motion commands allow one to specify the time variable:
<ul>
  <li><code>rTurnLeft (double speed, double time);</code></li>
  <li><code>rTurnRight (double speed, double time);</code></li>
  <li><code>rTurn (double direction, double time);</code></li>
  <li><code>rTurnSpeed (char * direction, double speed, double
  time);</code></li>
  <li><code>rForward (double speed, double time);</code>
    <p><b>Example: </b><code>rForward (0.5, 3.7);</code></p>
    <p>This command tells the robot to move forward at half speed for 3.7
      seconds.</p> </li>
  <li><code>rBackward (double speed, double time);</code></li>
  <li><code>rFastForward (double time);</code></li>
</ul>

As we mentioned earlier, most motion commands perform as blocking or non-blocking depending on their parameters--and motion commands with a time parameter can do exactly that. If the time given is greater than 0, the robot will move for that amount of time while blocking other commands. If the time parameter is negative, then it will be a non-blocking command that will continue until it is stopped, allowing subsequent commands to be processed in the meantime. A time of 0 will result in no motion. 
Also, remember that speed
ranges from 0 (no movement) to 1 (full speed), and the unit of time is
seconds. 
</p>



<h3>Continuous Commands</h3>
<p>
Continuous commands are commands that do not include time as a
variable. The robot executes these commands until a command to stop is
issued. These commands are non-blocking; that is, while the Scribbler 2 is
performing these commands, it can perform other actions (such as beeping).
</p>

<ul>
  <li><code>rMotors (double leftSpeed, double rightSpeed);</code>
    <p><b>Example: </b><code>rMotors (0.3, 0.7);</code></p>
    <p>The robot moves with the left wheel at 30% of full speed, and the
    right wheel at 70% of full speed, so the robot moves in a circular
    motion.</p></li>
  <li><code>rMove (double translate, double rotate);</code>
    <p><b>Example: </b><code>rMove (0.6, 1);</code></p>
    <p>The robot moves forward at 60% of full speed, while turning at full
    speed.</p></li> 
  <li><code>rRotate (double amount);</code>
       <p>Sets the robot's turn speed.</p></li>
  <li><code>rTranslate (double amount);</code>
       <p>Sets the robot's forward speed.</p></li>
</ul>
<p>
Can you think of a way to calculate the size of a circle, based on the
rotation and tranlation speed of the robot, or how to get the robot to turn
at a specific angle? 
</p>
<h3>Stop Commands</h3>
<p>
These commands stop the continuous commands after they have been issued.
</p>

<ul>
  <li><code>rStop();</code></li>
  <li><code>rHardStop();</code></li>
</ul>

<hr><p>

This document is available on the World Wide Web as

<BLOCKQUOTE>
<PRE>
http://www.cs.grinnell.edu/~oneilla/motionReading.shtml
</PRE>
</BLOCKQUOTE>

<hr>

<p>
<table width="100%">
<tr><td>
   <em>Created 20 July 2011 by April O'Neill</em><br>
   <em>Revised 27 July 2011 by April O'Neill</em><br>
   <em>Edited for new MyroC 21 January 2014 by  Henry M. Walker</em>
   </td>
   <td rowspan="2" align="right">
   <a href="http://validator.w3.org/check/referer"><img border="0" 
      src="/~walker/valid-html401-blue.png" alt="Valid HTML 4.01!" height="31"
      width="88"></a>
   <a href="http://jigsaw.w3.org/css-validator/"><img border="0"
       src="/~walker/vcss-blue.png" 
       alt="Valid CSS!" height="31"
       width="88"></a>
   </td>
</tr>

<tr><td>
   For more information, please contact
   <a href="http://www.cs.grinnell.edu/%7Ewalker/">Henry M. Walker</a> at
   <a href="mailto:walker@cs.grinnell.edu">walker@cs.grinnell.edu</a>.
   </td></tr>
</table>

<hr>
<!--#include file="copyright-notice-reading-black.inc"-->


</body>
</html>
