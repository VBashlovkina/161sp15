<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <link rel="stylesheet" type="text/css" href="style.css">
    <title>CSC 161 Module for  Getting Started with Linux, C, and the
    Scribbler 2</title>
    <link rev="made" href="mailto:walker@cs.grinnell.edu">
</head>

<div class="body">
<!--#include file="header.inc"-->

<div class="labcontent">

<h1>CSC 161 Module 000:  Getting Started with Linux, C, and the Scribbler 2</h1>

<h2>Summary and Main Topics</h2>
<p>
This module introduces CSC161 students to the basics of Linux, C
programming, and the Scribbler robots, including:
</p>

<ol>
<li>  introduction to using the terminal window;
<li>  basic Linux
<li>  elements of a C program, including variables and primitive types;
<li>  editing, compiling, linking, and running a program; and
<li>  basic Scribbler actions (beeping and motion). 
</ol>

<h2>Day-by-day Details</h2>

<table border>
<tr>
  <th>Day
  <th>Topic
  <th>Preparation
  <th>In-class
  <th>Due Date
  <th>Availability<br>for<br>Extra<br>Credit
</tr>

<tr>
  <td valign=top>Friday, August&nbsp;29
  <td valign=top>Problem-solving Process<br>
      Module 0: Linux Introduction
  <td valign=top>&nbsp;
  <td valign=top>
    <ul class="index">
      <li><a href="/~walker/intro-cs-sequence.html">Grinnell's
          Introductory CS Sequence</a>
      <li><a href="/~walker/courses/workstation-setup.html">Workstation
      Setup</a> 
      <li><a href="/~walker/courses/pair-programming.shtml">Pair
      Programming</a> 
      <li>Demonstration
        <ul class="index">
          <li><a href="scribbler-espeak.c">scribbler-espeak.c</a> (song,
          motion, and commentary)
        </ul>
      <li>Examples
        <ul class="index">
          <li><a href="pirates.c">pirates.c</a> (Pirates of the Caribbean)
          <li><a href="spirit-song-full.c">spirit-song-full.c</a>
          <li><a href="beep-move-demo.c">beep-move-demo.c</a>
          <li><a href="avoid-obj.c">avoid-obj.c</a>
          <li><a href="set-robot-name.c">set-robot-name.c</a>
        </ul>
    </ul>
  <td valign=top>&nbsp;
  <td valign=top>&nbsp;
</tr>

<tr>
<td valign=top>Monday, September&nbsp;1
  <td valign=top>Linux Basics
        <ul class="index">
          <li>Use of terminal window
          <li>Setting up the emacs editor
          <li>Updating <tt>.bashrc</tt>
          <li>Creating a 161 directory structure
          <li>Linux directory commands:  <tt>mkdir</tt>, <tt>rmdir</tt>, 
            <tt>cd</tt>, <tt>pwd</tt>
          <li>Linux file commands: <tt>ls</tt>, <tt>mv</tt>, 
            <tt>cp</tt>, <tt>rm</tt>
        </ul>
  <td class="index" valign=top>
    <ul class="index">
      <li><a href="reading-linux-basics.shtml">Reading
          (sections on "The Terminal Window", "Directories", and "Pathnames")</a>
      <li>Marge Coahran, <a href="/~walker/courses/coahranm/emacs.shtml">
          Introduction to Emacs</a>
    </ul>
  <td valign=top><a href="lab-linux-basics.shtml">lab exercise</a>
  <td valign=top>&nbsp;
  <td valign=top>&nbsp;
</tr>

<tr>
  <td valign=top>Tuesday, September&nbsp;2
  <td valign=top>
    Overview of C
        <ul class="index">
          <li>Basic syntax
            <ul class="index">
              <li>Elements of a program
              <li>Variables and arithmetic expressions
              <li>Variable names
              <li>Data types and sizes
              <li>Constants
            </ul>
          <li>Compiling C programs
          <li>Running C programs
        </ul>
    Printing with <tt>lpr</tt>
  <td valign=top>
    <ul class="index">
      <li>Reading from Text
        <ul class="index">
          <li>King:  Chapters 1-2, pages 1-32, OR
          <li>K&amp;R:  Intro., 1.1-1.2, 2.1-2.3
        </ul>
      <li>Walker, <a href="quarts-annotated.shtml"><code>quarts.c</code>:  A
          first program in C</a>
      <li>Temperature conversion
        <ul class="index">
          <li>Walker, <a href="temperature.c"><code>temperature.c</code>:
              C program example for in class</a>
          <li>Similar Scheme programs
            <ul class="index">
              <li><a href="temperature-conversion-1.scm">Version&nbsp;1</a>
              <li><a href="temperature-conversion-2.scm">Version&nbsp;2</a>
            </ul>
        </ul>
    </ul>
  <td valign=top>
    Discussion:  Overview of C<br>
    <a href="lab-intro-c.shtml">lab exercise</a>
  <td valign=top>&nbsp;
  <td valign=top>&nbsp;
</tr>

<tr>
  <td valign=top>Wednesday, September&nbsp;3
  <td valign=top>More C
    <ul class="index">
     <li>Speech synthesis with <tt>eSpeak</tt>
     <li>Elements of Linux
       <ul class="index">
         <li>Arrow keys
         <li>Auto completion
         <li>Linux commands:  <tt>cat</tt>, <tt>more</tt>, <tt>head</tt>, <tt>tail</tt>
         <li>Relative and absolute paths
       </ul>
   </ul>

  <td valign=top>
    <ul class="index">
      <li>The eSpeak Package
        <ul>
          <li>
            <a href="../../eSpeakExamples/eSpeakPackage.h">eSpeakPackage.h</a>
            header file 
          <li>
            <a href="../../eSpeakExamples/eSpeakIntro.shtml">Introduction to
              using the eSpeck package within C, through the use of the
              eSpeakPackage.</a> 
          <li>
            <a href="../../eSpeakExamples/eSpeakExample1.c">Sample program
            eSpeakExample1.c</a> 
          <li>
            <a href="../../eSpeakExamples/eSpeakExample2.c">Sample program
            eSpeakExample2.c</a> 
        </ul>
      <li><a href="reading-linux-basics.shtml#permissions">Reading
      (focus on"Help", "Files", and "File Permissions")</a>
     </ul>
  <td valign=top><a href="lab-more-intro-c.shtml">lab exercise</a>
  <td valign=top>&nbsp;
  <td valign=top>&nbsp;
</tr>

<tr>
  <td valign=top>Friday, September&nbsp;5  
  <td valign=top>Using the Scribbler 2 Robot
    <ul class="index">
     <li>the MyroC package
     <li>Using MyroC with eSpeak
    </ul>
  <td class="index" valign=top>
    <ul class="index">
     <li>S2 start-up guide, p. 3-6
     <li>Walker, <a href="scribblerlab-annotated.shtml"><code>scribblerlab.c</code>:  A
     first C program using the Scribbler 2 robot</a>
     <li>Annotated programs <a href="earsHangLow.c">earsHangLow.c</a>, 
      <a href="spirit-song.c">spirit-song.c</a>
     <li><a href="MyroC.h">MyroC.h header file</a>
     <li><a href="MyroCDev.h">MyroCDev.h header file</a>
     </ul>
  <td valign=top><a href="lab-scribbler.shtml">lab exercise</a>
  <td valign=top>&nbsp;
  <td valign=top>&nbsp;
</tr>

<tr>
  <td valign=top>Monday, September&nbsp;8
  <td valign=top>Project
  <td valign=top>&nbsp;
  <td valign=top><a href="#project0">Program a Song</a>
  <td valign=top>Due:  Wednesday, September&nbsp;10
  <td valign=top>&nbsp;
</tr>


</table>

<a name="project0"></a>
<h2>Project:  Program a Song</h2>
<p>
Working in pairs, students should develop a program that causes the
Scribbler 2 robot to play a song or melody that extends at least 30
seconds.  Within the program, eSpeak should be used to speak text that
introduces the song.  Students should also write a description of their
program, compile the program, and run it. Creativity in identifying a song
or melody is encouraged.  Songs which have been used in examples or labs
may not be used.
</p>

<h4>Project Submission</h4>

<p>
Submission of your project should come in two parts:
</p>

<ul>
<li>
Turn in a printed copy of your code at the start of class when the project
is due.
<ul>
<li>
Include a program listing
<li>
Of course, the program should be logically formatted and commented.
</ul>
Turn in a a written statement that describes how you tested your program.
This should include:
<ul>
<li>
what happened when you ran your program, 
<li>
how did the result of running your program meet specifications of the
project?
</ul>
<li>
Email your program to <b><tt>grader-161@cs.grinnell.edu</tt></b>.
<ul>
<li>
The subject line should include "CSC 161 Project 000", together with the
names of the collaborators who wrote the program.
<li>
Include the C program (not the compiled machine code) as an attachment.
<li>
Include a separate, attached file with your written statement regarding
testing.
</ul>
</ul>

<h4>Deadlines</h4>

<p>
This project, as well as any labs or supplemental problems due later in the
semester, is due at the start of class.
</p>

<ul>
<li>
The time stamp on the email must be before the start of class.
<li>
The printed copy should be turned in at the start of class.
</ul>

<p>
<b>Note:</b> If you email the project code or print the program after you
arrive in class, there is a good chance that your work will be considered
late and subject to the late penalty.
</p>

<p>
<i>Exceptions to the deadline policy and its penalties:</i>
</p>

<ul>
<li>
An extension of at least one class period is automatically
granted if the department's Linux network is down for an unscheduled period
of three or more hours during the week preceding the assignment.
<li>
Difficulties sometimes arise with printing through PaperCut.  When such
difficulties arise, you should contact the instructor (either at the start
of class or via email).  Note, however, that difficulties with PaperCut do
not impact deadlines for emailing materials.
<li>
Students arriving late to a class should turn in the paper form of the work
as soon as they arrive in the classroom.  In such cases, the assignment
will be considered on time if the email submission was received before the
class began.
</ul>


<h4>Grading</h4>

<ul>
<li>
<a href="grading-form.pdf">General Grading Form</a>
<li>
<a href="song-grading-form.shtml">Project-specific Grading Form</a>
</ul>

</div> <!-- labcontent-->

<div class="footer">
<hr>

<p>
This document is available on the World Wide Web as
</p>

<BLOCKQUOTE>
<PRE>
http://www.cs.grinnell.edu/~walker/courses/161.fa14/modules/getting-started.shtml
</PRE>
</BLOCKQUOTE>

<hr>
<table width="100%">
<tr><td valign=top>
   <em>created 24 June 2011</em> by Henry M. Walker<br>
   <em>revised 19 September 2011</em> by Henry M. Walker<br>
   <em>updated 1 September 2012, 31 December 2012, 23 January 2013,
   13-15 August 2013</em> by Henry M. Walker<br>
   <em>updated (deadline clarified) 10 September 2013</em> by Henry M. Walker<br>
   <em>updated submission description 28 January 2014</em> by Henry M. Walker<br>
   <em>updated dates 9 June 2014</em> by Henry M. Walker<br>
   <em>espeak in project added 3 September 2014</em> by Henry M. Walker
   </td>
   <td valign=top rowspan="2" align="right">
   <a href="http://validator.w3.org/check/referer"><img border="0"
      src="/~walker/valid-html401-blue.png" alt="Valid HTML 4.01!" height="31"
      width="88"></a>
   <a href="http://jigsaw.w3.org/css-validator/"><img border="0"
       src="/~walker/vcss-blue.png"
       alt="Valid CSS!" height="31"
       width="88"></a>
   </td>
</tr>

<tr><td valign=top>
   For more information, please contact
   <a class="footer-a" href="/~walker/">Henry M. Walker</a> at
   <a class="footer-a" href="mailto:walker@cs.grinnell.edu">walker@cs.grinnell.edu</a>.
   </tr>
</table>

<hr>
<!--#include file="copyright-notice.inc"-->

</div> <!-- footer -->
</div> <!-- body -->
</body>
</html>












