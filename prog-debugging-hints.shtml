<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <link rel="stylesheet" type="text/css" href="style.css">
    <title>Notes on Program Development and Debugging</title>
    <link rev="made" href="mailto:walker@cs.grinnell.edu">
</head>

<body>
<div class="body">
<!--#include file="header.inc"-->

<div class="labcontent">

<h1>Some Notes on Program Development and Debugging</h1>

<p>
The following notes highlight various elements of program development and
debugging.  The notes identify several practices that arise naturally in
this course.  <i>These notes are not intended to be exhaustive.</i>
</p>

<p>
Suggestions for this page are encouraged!
</p>

<h2>Program Development</h2>

<ol>
<li>
<p>
Program Format Parallels Function
</p>
<ol class="withloweralpha">
<li>
    Variable names should be descriptive 
    
<li>
    Indent lines within if, while, etc.
</ol>

<li>
<p>
Consistency of problem and data structure(s)
</p>
<ol class="withloweralpha">
<li>
      Use a data structure that fits conceptually with the problem
<li>
      Translation between problem concept and implementation details
        invites complexity and error
</ol>

<li>
<p>
Arrays
</p>
<ol class="withloweralpha">
<li>
      Use an array when a sequence of data of known size must be used and
        reused 
<li>
      Do not use an array
<ul>
<li>
           when an item can be read, processed, and forgotten
<li>
           when the size of the data set is unknown
</ul>
</ol>

<li>
<p>
No I/O inside computational utility functions
</p>
<ol class="withloweralpha">
<li>
      When functions can be called from various places and/or in various
        contexts, pass values in and out without I/O
<li>
      Put I/O in code that uses the functions, so I/O can be tailed to 
        different parts of the program
</ol>

<li>
<p>
Refactoring
</p>
<ol class="withloweralpha">
<li>
    When the same work is done in several places in a program,
    reorganize the code to place common pieces in separate procedures
</ol>

<li>
<p>
Incremental Development
</p>
<ol class="withloweralpha">
<li>
      First write a shell with the right structure, but little or no
        functionality.  (In Extreme Programming, this is called a <i>0-feature
        release</i>.) 
<li>
      Add minimal functionality to be able to input data element,
        place it in an appropriate structure, and print it
<li>
      Progressively add and test one new function at a time
</ol>
    
<p>
    By keeping new, untested code to a few lines at a time,
        errors likely will be restricted to a small code segment
</p>

</ol>


<h2>Debugging Hints</h2>

<ol>
<li>
<p>
Test cases
</p>
<ol class="withloweralpha">
<li>
      Black Box Testing:  consider logical possibilities of problem
<li>
      White Box Testing:  use code to guide testing
<ul>
<li>
        Boundary conditions:  Does loop start and stop at the right time
<li>
        Every path test:  Some test case should exercise each piece of code
</ul>
</ol>

<li>
<p>
Tracing Variables
</p>
<ol class="withloweralpha">
<li>
    Use one or more global variables to guard debugging print statements
<ul>
<li>
        Setting variable to 1, turns on debugging prints
<li>
        Setting variable to 0, turns off debugging prints
</ul>

<li>
    Different variables could turn on and off different categories of
        printing
</ol>

<p>
    This approach minimizes the risk that insertion/deletion of debugging
    code will add new errors.
</p>

</ol>

</div> <!-- labcontent-->

<div class="footer">
<hr>

<p>
This document is available on the World Wide Web as
</p>

<div class="address">
<PRE>
     http://www.cs.grinnell.edu/~walker/courses/161.sp13/prog-debugging-hints.shtml
</PRE>
</div> <!-- address -->
<hr>

<table width="100%">
<tr><td>
   <em>created 8 January 2013 by Henry M. Walker</em><br>
   <em>last revised 8 January 2013 by Henry M. Walker</em>
   </td>
   <td rowspan="2" align="right">
   <a href="http://validator.w3.org/check/referer"><img border="0" 
      src="/~walker/valid-html401-blue.png" alt="Valid HTML 4.01!" height="31"
      width="88"></a>
   <a href="http://jigsaw.w3.org/css-validator/"><img border="0"
       src="/~walker/vcss-blue.png" 
       alt="Valid CSS!" height="31"
       width="88"></a>
   </td>
</tr>

<tr><td>
   For more information, please contact 
   <a class="footer-a" href="/~walker/">Henry M. Walker</a> at
   <a  class="footer-a" href="mailto:walker@cs.grinnell.edu">walker@cs.grinnell.edu</a>.
   </tr>
</table>

<hr>
<!--#include file="copyright-notice.inc"-->

</div> <!-- footer -->
</div> <!-- body -->
</body>
</html>

